// Code generated by tfsmcgen. DO NOT EDIT.
// This file was automatically generated from OpenAPI schema: API_Link

package provider

import (
    "github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/terraform-providers/terraform-provider-smc/internal/customfield"
	"github.com/hashicorp/terraform-plugin-log/tflog"
    "context"
)

// to avoid import errors if unused
var _ = customfield.NewNestedObjectType[struct{}](nil)
var _ = types.String{}



type ApiLinkResourceModel struct {
    Href types.String `tfsdk:"href" json:"href,optional,omitempty"`
        Rel types.String `tfsdk:"rel" json:"rel,optional,omitempty"`
        Type types.String `tfsdk:"type" json:"type,optional,omitempty"`
        
}


func CopyReadOnlyApiLink(ctx context.Context, from *ApiLinkResourceModel, to *ApiLinkResourceModel) {
    // copy readOnly (aka computed) simple fields
    tflog.Debug(ctx, "CopyReadOnlyApiLink")
    to.Href = from.Href
    to.Rel = from.Rel
    to.Type = from.Type

    // copy readOnly (aka computed) nested objects

    // copy readOnly (aka computed) nested list of objects
}

func CopyNestedReadOnlyListApiLink(
    ctx context.Context,
    from_nst *customfield.NestedObjectList[ApiLinkResourceModel],
    to_nst *customfield.NestedObjectList[ApiLinkResourceModel]) {
    from, _ := from_nst.AsStructSliceT(ctx)
    to, _ := to_nst.AsStructSliceT(ctx)
    if from == nil && to == nil {
        return
    }
    if len(from) == 0 {
        return
    }
    if len(from) != len(to) {
        tflog.Warn(ctx, "Skipping readOnly copy for 'ApiLink': length mismatch")
        return
    }
    for i := range from {
        CopyReadOnlyApiLink(ctx, &from[i], &to[i])
    }
    *to_nst, _ = customfield.NewObjectList[ApiLinkResourceModel](ctx, to)
}

func CopyNestedReadOnlyApiLink(ctx context.Context, from_nst *customfield.NestedObject[ApiLinkResourceModel], to_nst *customfield.NestedObject[ApiLinkResourceModel]) {
    if from_nst == nil || from_nst.IsNull() || to_nst == nil || to_nst.IsNull() {
        return
    }
    from, diag := from_nst.Value(ctx)
    to, diag := to_nst.Value(ctx)
    // todo proper error handling
    if diag.HasError() {
        return
    }
    CopyReadOnlyApiLink(ctx, from, to)
    *to_nst = customfield.NewObjectMust[ApiLinkResourceModel](ctx, to)
}
    