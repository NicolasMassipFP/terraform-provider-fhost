// Code generated by tfsmcgen. DO NOT EDIT.
// This file was automatically generated from OpenAPI schema: Third_Party_Monitoring

package provider

import (
    "github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/terraform-providers/terraform-provider-smc/internal/customfield"
	"github.com/hashicorp/terraform-plugin-log/tflog"
    "context"
)

// to avoid import errors if unused
var _ = customfield.NewNestedObjectType[struct{}](nil)
var _ = types.String{}



type ThirdPartyMonitoringResourceModel struct {
    Encoding types.String `tfsdk:"encoding" json:"encoding,optional,omitempty"`
        LoggingProfileRef types.String `tfsdk:"logging_profile_ref" json:"logging_profile_ref,optional,omitempty"`
        MonitoringLogServerRef types.String `tfsdk:"monitoring_log_server_ref" json:"monitoring_log_server_ref,optional,omitempty"`
        Netflow types.Bool `tfsdk:"netflow" json:"netflow,optional,omitempty"`
        ProbingProfileRef types.String `tfsdk:"probing_profile_ref" json:"probing_profile_ref,optional,omitempty"`
        SnmpTrap types.Bool `tfsdk:"snmp_trap" json:"snmp_trap,optional,omitempty"`
        TimeZone types.String `tfsdk:"time_zone" json:"time_zone,optional,omitempty"`
        
}


func CopyReadOnlyThirdPartyMonitoring(ctx context.Context, from *ThirdPartyMonitoringResourceModel, to *ThirdPartyMonitoringResourceModel) {
    // copy readOnly (aka computed) simple fields
    tflog.Debug(ctx, "CopyReadOnlyThirdPartyMonitoring")

    // copy readOnly (aka computed) nested objects

    // copy readOnly (aka computed) nested list of objects
}

func CopyNestedReadOnlyListThirdPartyMonitoring(
    ctx context.Context,
    from_nst *customfield.NestedObjectList[ThirdPartyMonitoringResourceModel],
    to_nst *customfield.NestedObjectList[ThirdPartyMonitoringResourceModel]) {
    from, _ := from_nst.AsStructSliceT(ctx)
    to, _ := to_nst.AsStructSliceT(ctx)
    if from == nil && to == nil {
        return
    }
    if len(from) == 0 {
        return
    }
    if len(from) != len(to) {
        tflog.Warn(ctx, "Skipping readOnly copy for 'ThirdPartyMonitoring': length mismatch")
        return
    }
    for i := range from {
        CopyReadOnlyThirdPartyMonitoring(ctx, &from[i], &to[i])
    }
    *to_nst, _ = customfield.NewObjectList[ThirdPartyMonitoringResourceModel](ctx, to)
}

func CopyNestedReadOnlyThirdPartyMonitoring(ctx context.Context, from_nst *customfield.NestedObject[ThirdPartyMonitoringResourceModel], to_nst *customfield.NestedObject[ThirdPartyMonitoringResourceModel]) {
    if from_nst == nil || from_nst.IsNull() || to_nst == nil || to_nst.IsNull() {
        return
    }
    from, diag := from_nst.Value(ctx)
    to, diag := to_nst.Value(ctx)
    // todo proper error handling
    if diag.HasError() {
        return
    }
    CopyReadOnlyThirdPartyMonitoring(ctx, from, to)
    *to_nst = customfield.NewObjectMust[ThirdPartyMonitoringResourceModel](ctx, to)
}
    